name: Deploy Terraform Infrastructure

on:
  push:
    branches: [ "main" ] # Only trigger on pushes to the 'main' branch
  pull_request:
    branches: [ "main" ] # Only trigger on pull requests to the 'main' branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      compartment: ${{ vars.compartment }}
      region: ${{ vars.region }}
      TF_VAR_tenancy_ocid: "${{ secrets.TF_VAR_TENANCY_OCID }}"
      TF_VAR_user_ocid: "${{ secrets.TF_VAR_USER_OCID }}"
      TF_VAR_fingerprint: "${{ secrets.TF_VAR_FINGERPRINT }}"
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2
    
    - name: Create Private Key File
      env:
        TF_VAR_fingerprint: "${{ secrets.TF_VAR_FINGERPRINT }}"
      run: |
        echo "${{ secrets.PRIVATE_KEY_FILE }}" > private_key.pem
        echo "${{ env.TF_VAR_fingerprint }}""

    # - name: Login to Oracle Cloud Infrastructure
    #   run: |
    #     export TF_VAR_tenancy_ocid="${{ secrets.TF_VAR_TENANCY_OCID }}"
    #     export TF_VAR_user_ocid="${{ secrets.TF_VAR_USER_OCID }}"
    #     export TF_VAR_fingerprint="${{ secrets.TF_VAR_FINGERPRINT }}"

    #     # terraform login \
    #     #   --hostname "api.sa-saopaulo-1.oraclecloud.com" \
    #     #   --provider oci \
    #     #   --user-ocid "$TF_VAR_user_ocid" \
    #     #   --tenancy-ocid "$TF_VAR_tenancy_ocid" \
    #     #   --fingerprint "$TF_VAR_fingerprint" \
    #     #   --private-key-file="./private_key.pem" 

    - name: Initialize Terraform
      run: terraform init

    - name: Plan
      run: terraform plan -backend-config -var='tenancy_ocid="${{ env.TF_VAR_TENANCY_OCID }}"' -var='user_ocid="${{ env.TF_VAR_USER_OCID }}"' -var='fingerprint="${{ env.TF_VAR_FINGERPRINT }}"' -var='region=${{ env.region }}' -var='compartment=${{ env.compartment }}' -out=plan

    - name: Apply
      run: terraform apply plan --auto-approve
